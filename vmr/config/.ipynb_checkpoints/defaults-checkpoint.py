import os

from yacs.config import CfgNode as CN
# -----------------------------------------------------------------------------
# Convention about Training / Test specific parameters
# -----------------------------------------------------------------------------
# Config definition
# -----------------------------------------------------------------------------
_C = CN()

_C.MODEL = CN()
_C.MODEL.DEVICE = "cuda"
_C.MODEL.CUDNN = True
_C.MODEL.ARCHITECTURE = ""
_C.MODEL.WEIGHT = ""

# -----------------------------------------------------------------------------
# INPUT
# -----------------------------------------------------------------------------
_C.INPUT = CN()
_C.INPUT.NUM_SEGMENTS = 256
_C.INPUT.UPSAMPLE = True
_C.INPUT.MAX_NUM_WORDS = 30
_C.INPUT.FIX_NUM_WORDS = False
_C.INPUT.PRE_QUERY_SIZE = 300
_C.INPUT.WORD2VEC = 'GloVe'

# -----------------------------------------------------------------------------
# Dataset
# -----------------------------------------------------------------------------
_C.DATASETS = CN()
# List of the dataset names for training, as present in paths_catalog.py
_C.DATASETS.TRAIN = ()
_C.DATASETS.RESAMPLE = False
_C.DATASETS.RESAMPLE_WEIGHT = 0.0 # class balanced sampling
# List of the dataset names for testing, as present in paths_catalog.py
_C.DATASETS.TEST = ()
_C.DATASETS.VISUAL_DIM = 1024
_C.DATASETS.IN_MEMORY = False
_C.DATASETS.DEP_GRAPH = False
_C.DATASETS.CONSTI_MASK = False
_C.DATASETS.TREE_DEPTH = 3
_C.DATASETS.PROPOSAL_METHOD = ''
_C.DATASETS.NUM_CLIPS = -1 # for method 2dtan
_C.DATASETS.ANCHOR_WIDTHS = []
_C.DATASETS.WINDOW_WIDTHS = []
_C.DATASETS.WINDOW_OVERLAP = 0.0

# -----------------------------------------------------------------------------
# DataLoader
# -----------------------------------------------------------------------------
_C.DATALOADER = CN()
# Number of data loading threads
_C.DATALOADER.NUM_WORKERS = 4

# -----------------------------------------------------------------------------
# Models
# -----------------------------------------------------------------------------
# Causality
_C.MODEL.CAUSAL = CN()
_C.MODEL.CAUSAL.USE_CAUSALITY = False
_C.MODEL.CAUSAL.TAU = 16.0
_C.MODEL.CAUSAL.GAMMA = 1.0/32.0
_C.MODEL.CAUSAL.ALPHA = 0.5


# 2DTAN
_C.MODEL.TAN = CN()

_C.MODEL.TAN.FEATPOOL = CN()
_C.MODEL.TAN.FEATPOOL.INPUT_SIZE = 4096
_C.MODEL.TAN.FEATPOOL.HIDDEN_SIZE = 512
_C.MODEL.TAN.FEATPOOL.KERNEL_SIZE = 2
_C.MODEL.TAN.FEATPOOL.FREEZE = False

_C.MODEL.TAN.FEAT2D = CN()
_C.MODEL.TAN.FEAT2D.POOLING_COUNTS = [15,8,8,8]

_C.MODEL.TAN.INTEGRATOR = CN()
_C.MODEL.TAN.INTEGRATOR.QUERY_HIDDEN_SIZE = 512
_C.MODEL.TAN.INTEGRATOR.LSTM = CN()
_C.MODEL.TAN.INTEGRATOR.LSTM.NUM_LAYERS = 3
_C.MODEL.TAN.INTEGRATOR.LSTM.BIDIRECTIONAL = False
_C.MODEL.TAN.INTEGRATOR.FREEZE = False

_C.MODEL.TAN.PREDICTOR = CN() 
_C.MODEL.TAN.PREDICTOR.HIDDEN_SIZE = 512
_C.MODEL.TAN.PREDICTOR.KERNEL_SIZE = 5
_C.MODEL.TAN.PREDICTOR.NUM_STACK_LAYERS = 8
_C.MODEL.TAN.PREDICTOR.FREEZE = False

_C.MODEL.TAN.LOSS = CN()
_C.MODEL.TAN.LOSS.MIN_IOU = 0.3
_C.MODEL.TAN.LOSS.MAX_IOU = 0.7

# TCR
_C.MODEL.TCR = CN()
_C.MODEL.TCR.ENCODER_LAYERS = 1
_C.MODEL.TCR.DECODER_LAYERS = 1
_C.MODEL.TCR.LAMBDA_IOU = 2
_C.MODEL.TCR.LAMBDA_L1 = 2

_C.MODEL.TCR.VIDEOENCODER = CN()
_C.MODEL.TCR.VIDEOENCODER.METHOD = 'conv'
_C.MODEL.TCR.VIDEOENCODER.HIDDEN_DIM = 512
_C.MODEL.TCR.VIDEOENCODER.DROPOUT = 0.2
_C.MODEL.TCR.VIDEOENCODER.KERNEL_SIZE = -1 # conv
_C.MODEL.TCR.VIDEOENCODER.NUM_LAYERS = -1 # transformer
_C.MODEL.TCR.VIDEOENCODER.NUM_HEADS = -1 # transformer

_C.MODEL.TCR.QUERYENCODER = CN()
_C.MODEL.TCR.QUERYENCODER.HIDDEN_DIM = 512

_C.MODEL.TCR.MMENCODER = CN()
_C.MODEL.TCR.MMENCODER.FUSION_METHOD = 'mean'
_C.MODEL.TCR.MMENCODER.HIDDEN_DIM = 512
_C.MODEL.TCR.MMENCODER.TRANSFORMER = CN()
_C.MODEL.TCR.MMENCODER.TRANSFORMER.NUM_LAYERS = 3
_C.MODEL.TCR.MMENCODER.TRANSFORMER.FEEDFORWARD_DIM = 2048
_C.MODEL.TCR.MMENCODER.TRANSFORMER.NUM_HEADS = 8
_C.MODEL.TCR.MMENCODER.TRANSFORMER.DROPOUT = 0.1

_C.MODEL.TCR.PREDICTOR = CN()
_C.MODEL.TCR.PREDICTOR.METHOD = 'fian'

_C.MODEL.TCR.LOSS = CN()
_C.MODEL.TCR.LOSS.METHOD = 'standard'
_C.MODEL.TCR.LOSS.TAU = 0.55
_C.MODEL.TCR.LOSS.ALPHA = 0.001
_C.MODEL.TCR.LOSS.NEG_THR = 0.0
_C.MODEL.TCR.LOSS.POS_THR = 1.0

# LGI
_C.MODEL.LGI = CN()

_C.MODEL.LGI.QUERYENCODER = CN()
_C.MODEL.LGI.QUERYENCODER.NUM_SEMANTIC_ENTITY = 3
_C.MODEL.LGI.QUERYENCODER.SQAN_DROPOUT = 0.0
_C.MODEL.LGI.QUERYENCODER.RNN = CN()
_C.MODEL.LGI.QUERYENCODER.RNN.TYPE = 'LSTM'
_C.MODEL.LGI.QUERYENCODER.RNN.HIDDEN_SIZE = 512
_C.MODEL.LGI.QUERYENCODER.RNN.NUM_LAYERS = 2
_C.MODEL.LGI.QUERYENCODER.RNN.DROPOUT = 0.5
_C.MODEL.LGI.QUERYENCODER.RNN.BIDIRECTIONAL = True

_C.MODEL.LGI.VIDEOENCODER = CN()
_C.MODEL.LGI.VIDEOENCODER.HIDDEN_SIZE = 512
_C.MODEL.LGI.VIDEOENCODER.USE_POSITION = True

_C.MODEL.LGI.MMENCODER = CN()
_C.MODEL.LGI.MMENCODER.FUSION = CN()
_C.MODEL.LGI.MMENCODER.FUSION.METHOD = 'mul'
_C.MODEL.LGI.MMENCODER.LOCAL_CONTEXT = CN()
_C.MODEL.LGI.MMENCODER.LOCAL_CONTEXT.METHOD = 'res_block'
_C.MODEL.LGI.MMENCODER.LOCAL_CONTEXT.RESBLOCK_KSIZE = 15
_C.MODEL.LGI.MMENCODER.LOCAL_CONTEXT.RESBLOCK_NUM = 1
_C.MODEL.LGI.MMENCODER.LOCAL_CONTEXT.DOWNSAMPLE = False
_C.MODEL.LGI.MMENCODER.GLOBAL_CONTEXT = CN()
_C.MODEL.LGI.MMENCODER.GLOBAL_CONTEXT.METHOD = 'nl'
_C.MODEL.LGI.MMENCODER.GLOBAL_CONTEXT.SATT_NUM = 1
_C.MODEL.LGI.MMENCODER.GLOBAL_CONTEXT.SATT_USE_EMBEDDING = True
_C.MODEL.LGI.MMENCODER.GLOBAL_CONTEXT.NL_NUM = 2
_C.MODEL.LGI.MMENCODER.GLOBAL_CONTEXT.NL_HEADS_NUM = 4
_C.MODEL.LGI.MMENCODER.GLOBAL_CONTEXT.NL_DROPOUT = 0.0
_C.MODEL.LGI.MMENCODER.GLOBAL_CONTEXT.NL_USE_BIAS = True
_C.MODEL.LGI.MMENCODER.GLOBAL_CONTEXT.NL_USE_LOCAL_MASK = False

_C.MODEL.LGI.PREDICTOR = CN()
_C.MODEL.LGI.PREDICTOR.ATT_HDIM = 256
_C.MODEL.LGI.PREDICTOR.GROUNDING_HDIM = 512
_C.MODEL.LGI.PREDICTOR.LOGIC_HEAD = 'ReLU'

_C.MODEL.LGI.LOSS = CN()
_C.MODEL.LGI.LOSS.USE_TAG_LOSS = True
_C.MODEL.LGI.LOSS.TAG_WEIGHT = 1.0
_C.MODEL.LGI.LOSS.USE_DQA_LOSS = True
_C.MODEL.LGI.LOSS.DQA_WEIGHT = 1.0
_C.MODEL.LGI.LOSS.DQA_LAMBDA = 0.3

# CMIN
_C.MODEL.CMIN = CN()
_C.MODEL.CMIN.HIDDEN_DIM = 512
_C.MODEL.CMIN.DROPOUT = 0.2

_C.MODEL.CMIN.QUERYENCODER = CN()
_C.MODEL.CMIN.QUERYENCODER.MAX_NUM_WORDS = 20
_C.MODEL.CMIN.QUERYENCODER.NUM_GCN_LAYERS = 2

_C.MODEL.CMIN.VIDEOENCODER = CN()
_C.MODEL.CMIN.VIDEOENCODER.NUM_HEADS = 8
_C.MODEL.CMIN.VIDEOENCODER.NUM_ATT_LAYERS = 2
_C.MODEL.CMIN.VIDEOENCODER.ATT_WIDTH = 3

_C.MODEL.CMIN.LOSS = CN()
_C.MODEL.CMIN.LOSS.ALPHA = 0.001

# TCR
_C.MODEL.FIAN = CN()

_C.MODEL.FIAN.VIDEOENCODER = CN()
_C.MODEL.FIAN.VIDEOENCODER.NUM_HEADS = 8
_C.MODEL.FIAN.VIDEOENCODER.HIDDEN_DIM = 512
_C.MODEL.FIAN.VIDEOENCODER.NUM_ATT_LAYERS = 2
_C.MODEL.FIAN.VIDEOENCODER.ATT_WIDTH = 3
_C.MODEL.FIAN.VIDEOENCODER.DROPOUT = 0.2

_C.MODEL.FIAN.QUERYENCODER = CN()
_C.MODEL.FIAN.QUERYENCODER.HIDDEN_DIM = 512

_C.MODEL.FIAN.MMENCODER = CN()
_C.MODEL.FIAN.MMENCODER.HIDDEN_DIM = 512
_C.MODEL.FIAN.MMENCODER.TRANSFORMER = CN()
_C.MODEL.FIAN.MMENCODER.TRANSFORMER.FEEDFORWARD_DIM = 2048
_C.MODEL.FIAN.MMENCODER.TRANSFORMER.NUM_HEADS = 8
_C.MODEL.FIAN.MMENCODER.TRANSFORMER.DROPOUT = 0.1

_C.MODEL.FIAN.LOSS = CN()
_C.MODEL.FIAN.LOSS.TAU = 0.55
_C.MODEL.FIAN.LOSS.ALPHA = 0.001

# CSMGAN
_C.MODEL.CSMGAN = CN()
_C.MODEL.CSMGAN.HIDDEN_DIM = 512
_C.MODEL.CSMGAN.DROPOUT = 0.2

_C.MODEL.CSMGAN.VIDEOENCODER = CN()
_C.MODEL.CSMGAN.VIDEOENCODER.NUM_HEADS = 8
_C.MODEL.CSMGAN.VIDEOENCODER.NUM_ATT_LAYERS = 2
_C.MODEL.CSMGAN.VIDEOENCODER.ATT_WIDTH = 3

_C.MODEL.CSMGAN.LOSS = CN()
_C.MODEL.CSMGAN.LOSS.ALPHA = 0.001
_C.MODEL.CSMGAN.LOSS.HIGH_SCORE_THR = 0.45

# ---------------------------------------------------------------------------- #
# Solver
# ---------------------------------------------------------------------------- #
_C.SOLVER = CN()
_C.SOLVER.OPTIMIZER = 'Adam'
_C.SOLVER.MAX_EPOCH = 12
_C.SOLVER.LR = 0.01
_C.SOLVER.WEIGHT_DECAY = 0.0
_C.SOLVER.BATCH_SIZE = 32
_C.SOLVER.SCHEDULER = 'MultiStepLR'
_C.SOLVER.MILESTONES = (8, 11)
_C.SOLVER.CHECKPOINT_PERIOD = 1
_C.SOLVER.TEST_PERIOD = 1

# ---------------------------------------------------------------------------- #
# Specific test options
# ---------------------------------------------------------------------------- #
_C.TEST = CN()
_C.TEST.BATCH_SIZE = 64
_C.TEST.NMS_THRESH = 0.4
 
# ---------------------------------------------------------------------------- #
# Misc options
# ---------------------------------------------------------------------------- #
_C.OUTPUT_DIR = "."
_C.PATHS_CATALOG = os.path.join(os.path.dirname(__file__), "paths_catalog.py")
